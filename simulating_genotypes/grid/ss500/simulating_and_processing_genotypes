Author: Arslan Zaidi
date: 03/23/2020

Details of scripts used to simulate genotypes in a grid model with 500 individuals per deme. This was done after the 250/deme simulations so that we could split the sample, carry out GWAS in the training set and predict PRS in an independent set.

Maybe I will carry out all the qqplots etc in the full samples (500/deme simulations) once the tau-9 simulations are complete

location of data and output gwas_bias2/gwas/grid/genotypes/tau100/ss500

1. generate genotypes for 1800 individuals (500/deme for 36 demes)

  - script used: gwas_bias2/gwas/grid/genotypes/tau100/ss250/generate_genos_grid.py
    - note: the same script was used for ss250 simulations
  - output: archived/genos_grid_d36_m0.05_s500_t100_chr${chr}.vcf.gz

2. process vcf files by adding SNP ids and index them for use with bcftools

  - script used: proc_vcf_1.sh
  - output: archived/genos_grid_d36_m0.05_s500_t100_chr${chr}.ids.vcf.gz

3. concatenate individual vcf files into one

  - script: no script used. bcftools was used to merge them all:
          bcftools concat *.id.vcf.gz \
          -o genos_grid_d36_m0.05_s500_t100_chr1_20.vcf.gz \
          -O z
  - output: genos_grid_d36_m0.05_s500_t100_chr1_20.vcf.gz

3. convert vcf file into pgen files

  - command: plink2
            --double-id
            --make-pgen
            --out genos_grid_d36_m0.05_s500_t100_chr1_20
            --vcf genos_grid_d36_m0.05_s500_t100_chr1_20.vcf.gz

  - log: genos_grid_d36_m0.05_s500_t100_chr1_20.log
  - output: genos_grid_d36_m0.05_s500_t100_chr1_20.pgen/pfam/psam

4. split the genotypes into training and test set:

  - First script used: split_vcf.R
    - output: iid1_test.txt and iid2_test.txt
  - Second command used: plink2
          --keep iid1_test.txt (or iid2_test.txt) \
          --make-pgen \
          --out train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train \
          --pfile genos_grid_d36_m0.05_s500_t100_chr1_20 \
          --rm-dup exclude-all
  - Note: msprime converts genomic coordinates which are not integers to integers when outputting vcf files. This creates duplicated position. My solution was to remove all duplicated positions. There's no reason to believe the SFS of these would be any different from the remainining SNPs, so this shouldn't impact our analyses. It would just filter out some variants.
  - output location: train/genotypes/
  - output format: genos_grid_d36_m0.05_s500_t100.rmdup.train.pgen/pfam/psam
  - log file : train/genos_grid_d36_m0.05_s500_t100.rmdup.train.log

5. Write list of common and rare variants (for PCA):

  - command (common): plink2
          --indep-pairwise 100 10 0.1 \
          --maf 0.05 \
          --out train/genos_grid_d36_m0.05_s500_t100.rmdup.train.cmpruned \
          --pfile train/genos_grid_d36_m0.05_s500_t100.rmdup.train \
          --write-snplist

  - command (rare): plink2
        --indep-pairwise 100 10 0.1 \
        --mac 2 \
        --max-mac 4 \
        --out train/genos_grid_d36_m0.05_s500_t100.rmdup.train.repruned \
        --pfile train/genos_grid_d36_m0.05_s500_t100.rmdup.train \
        --write-snplist

  - output: train/genos_grid_d36_m0.05_s500_t100.rmdup.train.${freq; cm/re}pruned.prune.in

6. Carry out PCA:

  - command (rare): plink2
        --extract train/genos_grid_d36_m0.05_s500_t100.rmdup.train.repruned.prune.in \
        --out train/plinkPCA/genos_grid_d36_m0.05_s500_t100.rmdup.train.repruned.pca \
        --pca 100 \
        --pfile train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train

  - command (common): plink2
      --extract train/genos_grid_d36_m0.05_s500_t100.rmdup.train.cmpruned.prune.in \
      --out train/plinkPCA/genos_grid_d36_m0.05_s500_t100.rmdup.train.cmpruned.pca \
      --pca 100 \
      --pfile train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train

  -log train/genos_grid_d36_m0.05_s500_t100.rmdup.train.${freq}pruned.pca.log

  - output: train/plinkPCA/genos_grid_d36_m0.05_s500_t100.rmdup.train.${freq}pruned.pca.eigenvec

7. calculate frequency of each variant in the whole sample:

  - command: plink2 \
  --freq \
  --out train/frequencies/genos_grid_d36_m0.05_s500_t100.rmdup.train.frq \
  --pfile train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train.snps

  - log: train/genos_grid_d36_m0.05_s500_t100.rmdup.train.frq.log

8. calculate frequency of each variant in each deme:

  - command 1: plink2
  --make-bed
  --out train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train.b
  --pfile train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train

  Note: this converts pgen file into bed file because plink2 doesn't calculate stratified frequencies

  - command 2: plink2
  --bfile train/genotypes/genos_grid_d36_m0.05_s500_t100.rmdup.train.thinned_100kb.b \
  --freq \
  --out train/frequencies/genos_grid_d36_m0.05_s500_t100.rmdup.train.clst \
  --within genos_grid_d36_m0.05_s500_t100.train.pop

  - log: train/genos_grid_d36_m0.05_s500_t100.rmdup.train.clst.log
